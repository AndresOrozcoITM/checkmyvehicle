# Stage 1: Build the React application
FROM node:18-alpine AS build
WORKDIR /app

# Copia solo los archivos de dependencias primero para aprovechar el cache de Docker
# Si package.json no cambia, Docker reutilizará la capa de 'npm install'
COPY package.json package-lock.json* ./
RUN npm install

# Ahora copia el resto del código fuente de la aplicación
COPY . .

# Ejecuta el build para generar los archivos estáticos
RUN npm run build

# Stage 2: Serve the application using Nginx
FROM nginx:stable-alpine
# Copiamos los archivos estáticos construidos en la etapa anterior a la carpeta web de Nginx
COPY --from=build /app/build /usr/share/nginx/html
# Copiamos nuestra configuración personalizada de Nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]